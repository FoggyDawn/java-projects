Tai-e starts ...
Output directory: /home/byx/testSpace/javaprjs/xalan-2.7.1/taie-output
Writing options to /home/byx/testSpace/javaprjs/xalan-2.7.1/taie-output/options.yml
Writing log to /home/byx/testSpace/javaprjs/xalan-2.7.1/taie-output/tai-e.log
java.version: 17.0.14
java.version.date: 2025-01-21
java.runtime.version: 17.0.14+7-LTS
java.vendor: Amazon.com Inc.
java.vendor.version: Corretto-17.0.14.7.1
os.name: Linux
os.version: 5.15.167.4-microsoft-standard-WSL2
os.arch: amd64
Tai-e Version: 0.5.2-SNAPSHOT
Tai-e Commit: f4f1c5d3c96f68ac1bf30f8a35a3b8baefe40761
Writing analysis plan to /home/byx/testSpace/javaprjs/xalan-2.7.1/taie-output/tai-e-plan.yml
WorldBuilder starts ...
The world cache mode is enabled.
Loading the world cache from /home/byx/projects/Tai-e/cache/world-cache-430654536.bin
[Load the world cache] elapsed time: 3.00s
10138 classes with 97686 methods in the world
WorldBuilder finishes, elapsed time: 3.01s
pta starts ...
[Pointer analysis] elapsed time: 35.95s
Imprecise reflective calls:
[Class.forName]<javax.xml.parsers.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[5@L106] $r8 = invokestatic java.lang.Class.forName(r0, %intconst0, $r7), #targets: 68
[Class.forName]<javax.xml.parsers.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[13@L113] $r4 = invokestatic java.lang.Class.forName(r0, %intconst0, $r3), #targets: 68
[Class.forName]<javax.xml.parsers.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[15@L118] $r1 = invokestatic java.lang.Class.forName(r0, %intconst0, cl), #targets: 68
[Class.forName]<javax.xml.parsers.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[21@L124] $r12 = invokestatic java.lang.Class.forName(r0, %intconst0, $r11), #targets: 68
[Class.forName]<java.security.Policy: java.security.Policy getPolicyNoCheck()>[23@L184] $r9 = invokestatic java.lang.Class.forName(r28), #targets: 67
[Class.forName]<java.security.Policy$2: java.security.Policy run()>[9@L213] $r2 = invokestatic java.lang.Class.forName($r1, %intconst0, r14), #targets: 67
[Class.forName]<javax.xml.transform.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[5@L109] $r8 = invokestatic java.lang.Class.forName(r0, %intconst0, $r7), #targets: 67
[Class.forName]<javax.xml.transform.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[13@L116] $r4 = invokestatic java.lang.Class.forName(r0, %intconst0, $r3), #targets: 67
[Class.forName]<javax.xml.transform.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[15@L121] $r1 = invokestatic java.lang.Class.forName(r0, %intconst0, cl), #targets: 67
[Class.forName]<javax.xml.transform.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[21@L127] $r12 = invokestatic java.lang.Class.forName(r0, %intconst0, $r11), #targets: 67
[Class.forName]<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>[107@L1357] $r26 = invokestatic java.lang.Class.forName($r25, %intconst2, $r24), #targets: 67
[Class.forName]<com.sun.org.apache.xalan.internal.utils.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[25@L196] r10 = invokestatic java.lang.Class.forName(r1, %intconst1, $r3), #targets: 66
[Class.forName]<com.sun.org.apache.xalan.internal.utils.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[34@L205] r10 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC: java.lang.Class loadExternalFunction(java.lang.String)>[13@L282] $r6 = invokestatic java.lang.Class.forName(name, %intconst1, $r5), #targets: 66
[Class.forName]<com.sun.org.apache.xerces.internal.utils.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[22@L206] r9 = invokestatic java.lang.Class.forName(r1, %intconst1, $r3), #targets: 66
[Class.forName]<com.sun.org.apache.xerces.internal.utils.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[31@L215] r9 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<java.lang.SystemClassLoaderAction: java.lang.ClassLoader run()>[7@L2202] $r3 = invokestatic java.lang.Class.forName($r0, %intconst1, $r2), #targets: 66
[Class.forName]<java.nio.file.FileSystems$DefaultFileSystemHolder: java.nio.file.spi.FileSystemProvider getDefaultProvider()>[12@L118] $r4 = invokestatic java.lang.Class.forName(r2, %intconst2, $r3), #targets: 66
[Class.forName]<java.security.Provider$Service: java.lang.Class getImplClass()>[13@L1634] r33 = invokestatic java.lang.Class.forName($r18), #targets: 66
[Class.forName]<java.security.Provider$Service: java.lang.Class getKeyClass(java.lang.String)>[0@L1786] $r1 = invokestatic java.lang.Class.forName(r0), #targets: 66
[Class.forName]<java.util.ResourceBundle$RBClassLoader: java.lang.Class loadClass(java.lang.String)>[5@L514] $r2 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<java.util.ServiceLoader$LazyIterator: java.lang.Object nextService()>[10@L370] r31 = invokestatic java.lang.Class.forName(r1, %intconst0, $r2), #targets: 66
[Class.forName]<javax.crypto.CryptoPolicyParser: java.security.spec.AlgorithmParameterSpec getInstance(java.lang.String,java.lang.Integer[])>[0@L288] $r1 = invokestatic java.lang.Class.forName(r0), #targets: 66
[Class.forName]<javax.xml.stream.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[5@L107] $r8 = invokestatic java.lang.Class.forName(r0, %intconst0, $r7), #targets: 66
[Class.forName]<javax.xml.stream.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[13@L114] $r4 = invokestatic java.lang.Class.forName(r0, %intconst0, $r3), #targets: 66
[Class.forName]<javax.xml.stream.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[15@L119] $r1 = invokestatic java.lang.Class.forName(r0, %intconst0, cl), #targets: 66
[Class.forName]<javax.xml.stream.FactoryFinder: java.lang.Class getProviderClass(java.lang.String,java.lang.ClassLoader,boolean,boolean)>[21@L125] $r12 = invokestatic java.lang.Class.forName(r0, %intconst0, $r11), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.compiler.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[15@L505] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.compiler.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[24@L514] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.compiler.util.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[15@L505] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.compiler.util.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[24@L514] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.dom.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[15@L505] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.dom.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[24@L514] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.trax.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[15@L505] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xalan.xsltc.trax.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[24@L514] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xml.serializer.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[15@L504] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.apache.xml.serializer.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>[24@L513] r8 = invokestatic java.lang.Class.forName(r1), #targets: 66
[Class.forName]<org.xml.sax.helpers.NewInstance: java.lang.Object newInstance(java.lang.ClassLoader,java.lang.String)>[11@L80] r4 = invokestatic java.lang.Class.forName(className), #targets: 66
[Class.forName]<sun.security.jca.ProviderConfig$2: java.security.Provider run()>[19@L217] r55 = invokestatic java.lang.Class.forName($r4), #targets: 66
[Class.forName]<sun.security.provider.PolicyFile: java.security.Permission getInstance(java.lang.String,java.lang.String,java.lang.String)>[1@L939] $r1 = invokestatic java.lang.Class.forName(r0, %intconst0, %nullconst), #targets: 66
-------------- Pointer analysis statistics: --------------
#var pointers:                15,4738 (insens) / 89,2070 (sens)
#objects:                     1,6645 (insens) / 1,6940 (sens)
#var points-to:               2959,5848 (insens) / 1,6124,8971 (sens)
#static field points-to:      2,1353 (sens)
#instance field points-to:    443,7942 (sens)
#array points-to:             122,8499 (sens)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   